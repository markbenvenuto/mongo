# -*- mode: python -*-
Import("env")

env = env.Clone()

fmEnv = env.Clone()
fmEnv.InjectThirdPartyIncludePaths(libraries=['snappy'])

fmEnv.Library(
    target='free_mon',
    source=[
        'free_mon_storage.cpp',
        'free_monitoring_controller.cpp',
        env.Idlc('free_monitoring_protocol.idl')[0],
        env.Idlc('free_monitoring_commands.idl')[0],
        env.Idlc('free_monitoring_storage.idl')[0],
    ],
    LIBDEPS=[
        '$BUILD_DIR/mongo/base',
        '$BUILD_DIR/mongo/db/concurrency/lock_manager',
        '$BUILD_DIR/mongo/db/dbhelpers',
        '$BUILD_DIR/mongo/db/ftdc/ftdc',
        '$BUILD_DIR/mongo/idl/idl_parser',
        '$BUILD_DIR/third_party/shim_snappy',
    ],
)

fmEnv.Library(
    target='free_mon_mongod',
    source=[
        'free_mon_mongod.cpp',
        'free_mon_curl_client.cpp',
    ],
    LIBDEPS=[
        'free_mon',
        '$BUILD_DIR/mongo/db/ftdc/ftdc_server',
        '$BUILD_DIR/mongo/util/options_parser/options_parser',
    ],
    SYSLIBDEPS=[
        'libcurld' if env.TargetOSIs('windows') else 'curl',
#        'wininet' if env.TargetOSIs('windows') else 'curl',
    ],
)

env.CppUnitTest(
    target='free_monitoring_test',
    source=[
        'free_monitoring_controller_test.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/mongo/db/repl/replmocks',
        '$BUILD_DIR/mongo/db/repl/storage_interface_impl',
        '$BUILD_DIR/mongo/db/serveronly',
        '$BUILD_DIR/mongo/db/service_context_d_test_fixture',
        '$BUILD_DIR/mongo/db/service_context_d',
        '$BUILD_DIR/mongo/executor/thread_pool_task_executor_test_fixture',
        '$BUILD_DIR/mongo/unittest/concurrency',
        '$BUILD_DIR/mongo/util/clock_source_mock',
        'free_mon',
    ],
)
